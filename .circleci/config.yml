---
version: 2

references:
    cache:
        gomod: &GOMOD_CACHE_KEY v1-dependencies-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}

jobs:
    build-and-test:
        docker:
            - image: circleci/golang:1.13

        steps:
            - checkout

            - restore_cache:
                keys:
                    - *GOMOD_CACHE_KEY

            - run: make linux darwin

            - save_cache:
                key: *GOMOD_CACHE_KEY
                paths:
                    - /go/pkg

            - store_test_results:
                path: "."

            - persist_to_workspace:
                root: stage
                paths:
                    - nomad-*


    # https://circleci.com/blog/publishing-to-github-releases-via-circleci/
    publish-github-release:
        docker:
            - image: cibuilds/github:0.12

        steps:
            - attach_workspace:
                at: ./stage/

            ## https://circleci.com/docs/2.0/env-vars/#built-in-environment-variables
            - run:
                name: Publish Release to GitHub
                shell: /bin/bash -e -u -o pipefail
                command: |
                    ghr \
                        -u ${CIRCLE_PROJECT_USERNAME} \
                        -r ${CIRCLE_PROJECT_REPONAME} \
                        -c ${CIRCLE_SHA1} \
                        -delete \
                        ${CIRCLE_TAG} \
                        ./stage/

workflows:
    version: 2

    # https://circleci.com/docs/2.0/workflows/#executing-workflows-for-a-git-tag
    build-and-publish:
        jobs:
            - build-and-test:
                # required since `publish-github-release` has tag filters AND
                # requires `build-and-test`
                filters:
                    tags:
                      only: /.*/

            - publish-github-release:
                requires:
                    - build-and-test

                filters:
                    branches:
                        ignore: /.*/

                    tags:
                        only: /^\d+\.\d+\.\d+$/
